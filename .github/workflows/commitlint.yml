name: "Commit Lint"

on:
  pull_request_target:
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: read
jobs:
  commitlint:
    permissions:
      contents: read
      pull-requests: write
      issues: write
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install required dependencies
        run: |
          sudo apt update && sudo apt install -y git curl
          curl -fsSL https://deb.nodesource.com/setup_18.x  | sudo -E bash -
          sudo DEBIAN_FRONTEND=noninteractive apt install -y nodejs
      - name: Print versions
        run: |
          git --version
          node --version
          npm --version
          npx commitlint --version
      - name: Install commitlint
        run: |
          npm install conventional-changelog-conventionalcommits
          npm install commitlint@latest @commitlint/config-conventional
      - name: Validate PR commits with commitlint
        id: commitlint
        if: github.event_name == 'pull_request_target'
        run: npx commitlint --from ${{ github.event.pull_request_target.head.sha }}~${{ github.event.pull_request_target.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
        continue-on-error: true
      - name: Remove existing commitlint labels
        if: ${{ !cancelled() && github.event_name == 'pull_request_target' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: 'commitlint-pass'
              });
            } catch (error) {
              console.log('commitlint-pass label not found or already removed');
            }

            try {
              await github.rest.issues.removeLabel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                name: 'commitlint-fail'
              });
            } catch (error) {
              console.log('commitlint-fail label not found or already removed');
            }
      - name: Add success label and comment
        if: ${{ !cancelled() && steps.commitlint.outcome == 'success' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Add label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['commitlint-pass']
            });

            // Find existing commitlint comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.data.find(comment =>
              comment.user.type === 'Bot' && comment.body.includes('<!-- commitlint-status -->')
            );

            const successBody = `<!-- commitlint-status -->
            ## ‚úÖ Commitlint Check Passed

            All commit messages follow the conventional commit format. Great job! üéâ`

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: successBody
              });
            } else {
              // Create new comment if none exists
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: successBody
              });
            }

      - name: Add failure label and comment
        if: ${{ !cancelled() && steps.commitlint.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            // Add label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: ['commitlint-fail']
            });

            // Find existing commitlint comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const existingComment = comments.data.find(comment =>
              comment.user.type === 'Bot' && comment.body.includes('<!-- commitlint-status -->')
            );

            const failureBody = `<!-- commitlint-status -->
            ## ‚ùå Commitlint Check Failed

            Some commit messages don't follow the [conventional commit format](https://www.conventionalcommits.org/en/v1.0.0/#summary).

            ### How to fix:
            1. Check the commitlint output in the workflow logs \`step: Validate PR commits with commitlint\`
            2. Use format: \`type(scope): description\`
            3. Examples:
               - \`feat: add new feature\`
               - \`fix: resolve bug in login\`
               - \`docs: update README\`
               - \`chore(ci): update workflow\`
               - \`refactor(loader): adjest something\`
               - \`test(validator): add new test\`

            ### Valid types:
            \`feat\`, \`fix\`, \`docs\`, \`refactor\`, \`test\`, \`chore\`, \`build\`, \`ci\`

            Please fix the commit messages and push again. üîß`

            if (existingComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: existingComment.id,
                body: failureBody
              });
            } else {
              // Create new comment if none exists
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: failureBody
              });
            }

      - name: Fail job if commitlint failed
        if: ${{ !cancelled() && steps.commitlint.outcome == 'failure' }}
        run: |
          echo "Commitlint validation failed. Please check Validate PR commits with commitlint step for details."
          exit 1
