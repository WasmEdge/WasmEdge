name: docker

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  push:
    tags:
      - '*.*.*'
    branches:
      - master
    paths:
      - 'utils/docker/**'
      - '.github/workflows/docker.yml'
  pull_request:
    paths:
      - 'utils/docker/**'
      - '.github/workflows/docker.yml'
  schedule:
    - cron: "0 0 */7 * *"

jobs:
  prep:
    name: Prepare docker env
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.prep.outputs.version }}
      docker_image: ${{ steps.prep.outputs.docker_image }}
      created: ${{ steps.prep.outputs.created }}
    steps:
      - name: Prepare docker env
        id: prep
        run: |
          DOCKER_IMAGE=wasmedge/wasmedge
          VERSION=noop
          if [ "${{ github.event_name }}" = "schedule" ]; then
          VERSION=nightly
          elif [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
          VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
          VERSION=edge
          fi
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
          VERSION=pr-${{ github.event.number }}
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "docker_image=$DOCKER_IMAGE" >> $GITHUB_OUTPUT
          echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

  bake-base-images:
    name: Bake `ci-image-base`
    needs: [prep]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Bake and Push
        uses: docker/bake-action@v5
        with:
          files: utils/docker/docker-bake.ci-image-base
          push: ${{ github.event_name != 'pull_request' }}

  build-docker-images:
    name: build-docker-images
    needs: [prep, bake-base-images]
    runs-on: ubuntu-latest
    container:
      image: wasmedge/wasmedge:ci-image-base

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: "Rebuild wasmedge/wasmedge:ubuntu-base"
        uses: docker/build-push-action@v6
        with:
          context: ./utils/docker
          file: utils/docker/Dockerfile.base
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.prep.outputs.docker_image }}:ubuntu-base
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ needs.prep.outputs.version }}
            org.opencontainers.image.created=${{ needs.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: "Rebuild wasmedge/wasmedge:ubuntu-build-clang"
        uses: docker/build-push-action@v6
        with:
          build-args: BASE=wasmedge/wasmedge:ubuntu-base
          context: ./utils/docker
          file: ./utils/docker/Dockerfile.build-clang
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.prep.outputs.docker_image }}:ubuntu-build-clang
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ needs.prep.outputs.version }}
            org.opencontainers.image.created=${{ needs.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: "Rebuild wasmedge/wasmedge:ubuntu-build-gcc"
        uses: docker/build-push-action@v6
        with:
          build-args: BASE=wasmedge/wasmedge:ubuntu-base
          context: ./utils/docker
          file: utils/docker/Dockerfile.build-gcc
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.prep.outputs.docker_image }}:ubuntu-build-gcc
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ needs.prep.outputs.version }}
            org.opencontainers.image.created=${{ needs.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: "Rebuild wasmedge/wasmedge:ubuntu-build-clang-plugins-deps"
        uses: docker/build-push-action@v6
        with:
          build-args: BASE=wasmedge/wasmedge:ubuntu-build-clang
          context: ./utils
          file: ./utils/docker/Dockerfile.build-plugins-deps
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.prep.outputs.docker_image }}:ubuntu-build-clang-plugins-deps
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ needs.prep.outputs.version }}
            org.opencontainers.image.created=${{ needs.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: "Rebuild wasmedge/wasmedge:ubuntu-build-gcc-plugins-deps"
        uses: docker/build-push-action@v6
        with:
          build-args: BASE=wasmedge/wasmedge:ubuntu-build-gcc
          context: ./utils
          file: ./utils/docker/Dockerfile.build-plugins-deps
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.prep.outputs.docker_image }}:ubuntu-build-gcc-plugins-deps
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ needs.prep.outputs.version }}
            org.opencontainers.image.created=${{ needs.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: "Rebuild wasmedge/wasmedge:latest"
        uses: docker/build-push-action@v6
        with:
          build-args: BASE=wasmedge/wasmedge:ubuntu-base
          context: ./utils/docker
          file: utils/docker/Dockerfile.build-clang
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.prep.outputs.docker_image }}:latest
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ needs.prep.outputs.version }}
            org.opencontainers.image.created=${{ needs.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

  build-manylinux-docker-images:
    needs: [prep, bake-base-images]
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: manylinux2014 x86_64
            docker_tag: manylinux2014_x86_64
            dockerfile: utils/docker/Dockerfile.manylinux2014_x86_64
            dockerfile_plugin: utils/docker/Dockerfile.manylinux2014-build-plugins-deps
            target_platforms: linux/amd64
            host_runner: ubuntu-latest
            host_container: wasmedge/wasmedge:ci-image-base
          - name: manylinux_2_28 x86_64
            docker_tag: manylinux_2_28_x86_64
            dockerfile: utils/docker/Dockerfile.manylinux_2_28_x86_64
            dockerfile_plugin: utils/docker/Dockerfile.manylinux_2_28-build-plugins-deps
            target_platforms: linux/amd64
            host_runner: ubuntu-latest
            host_container: wasmedge/wasmedge:ci-image-base
          - name: manylinux2014 aarch64
            docker_tag: manylinux2014_aarch64
            dockerfile: utils/docker/Dockerfile.manylinux2014_aarch64
            dockerfile_plugin: utils/docker/Dockerfile.manylinux2014-build-plugins-deps
            target_platforms: linux/arm64
            host_runner: linux-arm64-v2
            host_container: wasmedge/wasmedge:ci-image-base_aarch64
          - name: manylinux_2_28 aarch64
            docker_tag: manylinux_2_28_aarch64
            dockerfile: utils/docker/Dockerfile.manylinux_2_28_aarch64
            dockerfile_plugin: utils/docker/Dockerfile.manylinux_2_28-build-plugins-deps
            target_platforms: linux/arm64
            host_runner: linux-arm64-v2
            host_container: wasmedge/wasmedge:ci-image-base_aarch64
    name: build ${{ matrix.name }}
    runs-on: ${{ matrix.host_runner }}
    container:
      image: ${{ matrix.host_container }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: "Rebuild wasmedge/wasmedge:${{ matrix.docker_tag }}"
        uses: docker/build-push-action@v6
        with:
          build-args: BASE=quay.io/pypa/${{ matrix.docker_tag }}
          context: ./utils/docker
          file: ${{ matrix.dockerfile }}
          platforms: ${{ matrix.target_platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.prep.outputs.docker_image }}:${{ matrix.docker_tag }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ needs.prep.outputs.version }}
            org.opencontainers.image.created=${{ needs.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: "Rebuild wasmedge/wasmedge:${{ matrix.docker_tag }}-plugins-deps"
        uses: docker/build-push-action@v6
        with:
          build-args: BASE=wasmedge/wasmedge:${{ matrix.docker_tag }}
          context: ./utils
          file: ${{ matrix.dockerfile_plugin }}
          platforms: ${{ matrix.target_platforms }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ needs.prep.outputs.docker_image }}:${{ matrix.docker_tag }}-plugins-deps
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ needs.prep.outputs.version }}
            org.opencontainers.image.created=${{ needs.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
