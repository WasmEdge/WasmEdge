name: Warning of Inventorying Rust

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - master
      - "rust/*"
    paths:
      - ".github/workflows/inventory.yml"
      - "bindings/rust/wasmedge-sys/**"
  pull_request:
    branches:
      - master
    paths:
      - ".github/workflows/inventory.yml"
      - "bindings/rust/wasmedge-sys/**"

jobs:
  rust:
    runs-on: ubuntu-latest
    container:
      image: wasmedge/wasmedge:ubuntu-build-clang

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install dependency
        run: |
          apt update
          apt install -y ctags

      - name: Create allowlist
        run: |
          tee -a allowlist.txt <<EOF
          WasmEdge_LimitIsEqual
          WasmEdge_ResultGetMessage
          WasmEdge_StringCopy
          WasmEdge_VMAsyncRunWasmFromASTModule
          WasmEdge_VMAsyncRunWasmFromBuffer
          WasmEdge_VMAsyncRunWasmFromFile
          WasmEdge_VMGetFunctionType
          WasmEdge_VMGetFunctionTypeRegistered
          WasmEdge_VMRunWasmFromASTModule
          WasmEdge_VMRunWasmFromBuffer
          WasmEdge_VMRunWasmFromFile
          WasmEdge_StringWrap
          WasmEdge_Plugin_GetDescriptor
          WasmEdge_AsyncCancel
          WasmEdge_AsyncDelete
          WasmEdge_AsyncGet
          WasmEdge_AsyncGetReturnsLength
          WasmEdge_AsyncWait
          WasmEdge_AsyncWaitFor
          WasmEdge_VMAsyncExecute
          WasmEdge_VMAsyncExecuteRegistered
          WasmEdge_VMCleanup
          WasmEdge_VMCreate
          WasmEdge_VMDelete
          WasmEdge_VMExecute
          WasmEdge_VMExecuteRegistered
          WasmEdge_VMGetActiveModule
          WasmEdge_VMGetExecutorContext
          WasmEdge_VMGetFunctionList
          WasmEdge_VMGetFunctionListLength
          WasmEdge_VMGetImportModuleContext
          WasmEdge_VMGetLoaderContext
          WasmEdge_VMGetStatisticsContext
          WasmEdge_VMGetStoreContext
          WasmEdge_VMGetValidatorContext
          WasmEdge_VMInstantiate
          WasmEdge_VMLoadWasmFromASTModule
          WasmEdge_VMLoadWasmFromBuffer
          WasmEdge_VMLoadWasmFromFile
          WasmEdge_VMRegisterModuleFromASTModule
          WasmEdge_VMRegisterModuleFromBuffer
          WasmEdge_VMRegisterModuleFromFile
          WasmEdge_VMRegisterModuleFromImport
          WasmEdge_VMValidate
          WasmEdge_VMGetRegisteredModule
          WasmEdge_VMListRegisteredModule
          WasmEdge_VMListRegisteredModuleLength
          EOF
          echo "===Allowlist==="
          cat allowlist.txt
          echo "===End of Allowlist==="

      - name: Inventory for rust-sys
        run: |
          echo "===Compose missing api list==="
          for fn in `ctags -x --c-types=f+p include/api/wasmedge/wasmedge.h  | awk '/^WasmEdge_/{print $1}'`; do
            grep -q ${fn} -R bindings/rust/wasmedge-sys || echo "${fn} is not used in rust-sys crate" >> /tmp/missing_api_in_rust.txt
          done;
          cat /tmp/missing_api_in_rust.txt
          echo "===Remove missing api by allowlist==="
          for api in `cat allowlist.txt | awk '/^WasmEdge_/{print $1}'`; do
            echo "------ Removing", ${api}
            echo "${api} " | xargs -I '{}' sed -i '/{}/d' /tmp/missing_api_in_rust.txt
          done;
          cat /tmp/missing_api_in_rust.txt || exit 0
          exit `wc -l /tmp/missing_api_in_rust.txt | awk '{print $1}'`
