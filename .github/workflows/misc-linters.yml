name: Misc linters

on: [push, pull_request]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  misc:
    permissions:
      contents: read
      pull-requests: read
    name: misc linters
    runs-on: ubuntu-latest
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Ensure git safe directory
        run: |
          git config --global --add safe.directory $(pwd)
      - name: check spell
        run: |
          python3 -m venv ./venv
          source ./venv/bin/activate
          pip install codespell
          # exclude files which may be synchronized from other places
          git ls-files | grep -v "^thirdparty" | grep -v "/thirdparty/" | grep -v "/dist/" | xargs -t codespell --ignore-words .github/workflows/ignore_words 2>/dev/null
  lineguard:
    name: lineguard
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Ensure git safe directory
        run: |
          git config --global --add safe.directory $(pwd)
      - name: Install lineguard
        run: |
          curl -L https://github.com/hydai/lineguard/releases/download/v0.1.4/lineguard-v0.1.4-x86_64-unknown-linux-gnu.tar.gz | tar xz
          sudo mv lineguard /usr/local/bin/
      - name: Run lineguard
        run: |
          BASE_REF=${{ github.base_ref }}
          if git rev-parse --verify origin/$BASE_REF >/dev/null 2>&1; then
            FROM_COMMIT=$(git rev-parse origin/$BASE_REF)
            TO_COMMIT=$(git rev-parse HEAD)
            lineguard --config .lineguardrc --fix --verbose --from $FROM_COMMIT --to $TO_COMMIT || { echo "Lineguard found issues"; exit 1; }
          else
            FROM_COMMIT=$(git rev-parse HEAD~1)
            TO_COMMIT=$(git rev-parse HEAD)
            lineguard --config .lineguardrc --fix --verbose --from $FROM_COMMIT --to $TO_COMMIT || { echo "Lineguard found issues"; exit 1; }
          fi
