# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  BASE_BINDIR: build
  BASE_TESTDIR: build/test

stages:
  - build
  - test

# Templates
.before_build: &before_build
  - rm -rf ${BASE_BINDIR}
  - mkdir ${BASE_BINDIR}
  - cd ${BASE_BINDIR}

.cache_paths: &cache_paths
  paths:
    - ${BASE_BINDIR}

.build_job_template: &build_job
  stage: build
  image: secondstate/ssvm:${KEY}
  before_script:
    - *before_build
  script:
    - cmake .. ${CMAKE_OPTIONS}
    - make -j2
  cache:
    <<: *cache_paths
    key: ${KEY}
    policy: push

.test_job_template: &test_job
  stage: test
  image: secondstate/ssvm:${KEY}
  before_script:
    - cd ${BASE_TESTDIR}
  script:
    - ctest
  cache:
    <<: *cache_paths
    key: ${KEY}
    policy: pull

# General Build Jobs

build:gcc:
  <<: *build_job
  tags: ["ssvm-gcc"]
  variables:
    CMAKE_OPTIONS: "-DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON"
    KEY: "ubuntu-build-gcc"

build:clang:
  <<: *build_job
  tags: ["ssvm-clang"]
  variables:
    CMAKE_OPTIONS: "-DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON"
    KEY: "ubuntu-build-clang"

# General Test Jobs

test:gcc:
  <<: *test_job
  tags: ["ssvm-gcc"]
  needs: ["build:gcc"]
  variables:
    KEY: "ubuntu-build-gcc"

test:clang:
  <<: *test_job
  tags: ["ssvm-clang"]
  needs: ["build:clang"]
  variables:
    KEY: "ubuntu-build-clang"
